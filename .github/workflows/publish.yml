name: _publish

on:
  workflow_call:

jobs:
  build-docker:
    runs-on: ubuntu-latest
    container:
      image: joinself/tools
    steps:
      - name: Setup job
        uses: joinself/github-actions-public/setup-job@main
      - name: Publish
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_CI_CI: ${{ secrets.SLACK_WEBHOOK_CI_CI }}
          CONTAINER_REGISTRY_URL: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}
        run: |
          . ${GITHUB_WORKSPACE}/.ci/env
          chown root:root .
          git config --global user.name ci
          git config --global user.email ops@joinself.com

          tags=$(git tag | sort -V | grep -E "^[0-9]*.[0-9]*.[0-9]*$")
          commit_message=$(git show -s --format=%s)
          if [[ "${tags}" == "" ]]; then
            version="0.1.0"
          else
            current_version=$(echo "${tags}" | tail -n 1)
            case $commit_message in
              *\[bump-major\]*)
                version=$(semver bump major $current_version)
                ;;
              *\[bump-patch\]*)
                version=$(semver bump patch $current_version)
                ;;
              *)
                version=$(semver bump minor $current_version)
                ;;
            esac
          fi

          git tag -a ${version} -m "${version}"
          git push origin ${version}

          docker build -t ${CONTAINER_REGISTRY_URL}:${version} -f docker/Dockerfile .
          docker tag ${CONTAINER_REGISTRY_URL}:${version} ${CONTAINER_REGISTRY_URL}:latest
          echo "${GH_TOKEN}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker push ${CONTAINER_REGISTRY_URL}:${version}
          docker push ${CONTAINER_REGISTRY_URL}:latest

          helm package helm/chart
          pkg_name=$(`ls *.tgz)
          helm push ${pkg_name} oci://ghcr.io/joinself/charts

          subject=$(git log -n 1 --format=%s)
          body=$(git log -n 1 --format=%b | grep -E '^\*|^-' | sed 's/^*/-/g') || true
          if [[ -z ${body} ]]; then
            release_notes="- ${subject}"
          else
            release_notes="${body}"
          fi
          gh release create "${version}" --notes "${release_notes}"

          slack-release-notification -v ${version}
      - name: Failure notification
        if: ${{ github.ref == 'refs/heads/main' && failure() }}
        uses: joinself/github-actions-public/failure-notification@main
        with:
          slack-webhook: ${{ secrets.SLACK_WEBHOOK_CI_ALERTS }}
