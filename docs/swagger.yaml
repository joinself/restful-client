basePath: /v1/
definitions:
  app.app:
    properties:
      id:
        type: string
    type: object
  app.response:
    properties:
      items:
        items:
          $ref: '#/definitions/app.app'
        type: array
      page:
        type: integer
      page_count:
        type: integer
      per_page:
        type: integer
      total_count:
        type: integer
    type: object
  auth.AuthRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  auth.AuthResponse:
    properties:
      token:
        type: string
    type: object
  connection.Connection:
    properties:
      appid:
        type: string
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      selfid:
        type: string
      updated_at:
        type: string
    type: object
  connection.CreateConnectionRequest:
    properties:
      selfid:
        type: string
    type: object
  connection.UpdateConnectionRequest:
    properties:
      name:
        type: string
    type: object
  connection.response:
    properties:
      items:
        items:
          $ref: '#/definitions/connection.Connection'
        type: array
      page:
        type: integer
      page_count:
        type: integer
      per_page:
        type: integer
      total_count:
        type: integer
    type: object
  entity.Attestation:
    properties:
      body:
        type: string
      created_at:
        type: string
      id:
        type: string
      updated_at:
        type: string
      value:
        type: string
    type: object
  fact.Fact:
    properties:
      attestations:
        items:
          $ref: '#/definitions/entity.Attestation'
        type: array
      body:
        type: string
      cid:
        type: string
      created_at:
        type: string
      fact:
        type: string
      iat:
        type: string
      id:
        type: string
      iss:
        type: string
      jti:
        type: string
      request_id:
        type: string
      source:
        type: string
      status:
        type: string
      updated_at:
        type: string
    type: object
  message.CreateMessageRequest:
    properties:
      body:
        type: string
    type: object
  message.Message:
    properties:
      body:
        type: string
      cid:
        type: string
      created_at:
        type: string
      iat:
        type: string
      id:
        type: integer
      iss:
        type: string
      rid:
        type: string
      updated_at:
        type: string
    type: object
  message.response:
    properties:
      items:
        items:
          $ref: '#/definitions/message.Message'
        type: array
      page:
        type: integer
      page_count:
        type: integer
      per_page:
        type: integer
      total_count:
        type: integer
    type: object
  request.CreateRequest:
    properties:
      facts:
        items:
          $ref: '#/definitions/request.FactRequest'
        type: array
      type:
        type: string
    type: object
  request.FactRequest:
    properties:
      name:
        type: string
      sources:
        items:
          type: string
        type: array
    type: object
  request.Request:
    properties:
      auth:
        type: boolean
      created_at:
        type: string
      facts:
        items:
          $ref: '#/definitions/request.FactRequest'
        type: array
      id:
        type: string
      resources:
        items:
          $ref: '#/definitions/request.RequestResource'
        type: array
      status:
        type: string
      typ:
        type: string
      updated_at:
        type: string
    type: object
  request.RequestResource:
    properties:
      uri:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server server Bob.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Echo Swagger Example API
  version: "1.0"
paths:
  /apps:
    get:
      consumes:
      - application/json
      description: List restful client configured apps.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.response'
      security:
      - BearerAuth: []
      summary: List apps.
      tags:
      - apps
  /apps/:app_id/connections:
    get:
      consumes:
      - application/json
      description: List connections matching the specified filters.
      parameters:
      - description: App id
        in: path
        name: app_id
        required: true
        type: string
      - description: page number
        in: query
        name: page
        type: integer
      - description: number of elements per page
        in: query
        name: per_page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/connection.response'
      security:
      - BearerAuth: []
      summary: List connections.
      tags:
      - connections
    post:
      consumes:
      - application/json
      description: Creates a new connection, permits ACLs and sends a request for
        public information.
      parameters:
      - description: App id
        in: path
        name: app_id
        required: true
        type: string
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/connection.CreateConnectionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/connection.Connection'
      security:
      - BearerAuth: []
      summary: Creates a new connection.
      tags:
      - connections
  /apps/:app_id/connections/{connection_id}/facts/{id}:
    get:
      consumes:
      - application/json
      description: Get fact details by fact request id.
      parameters:
      - description: App id
        in: path
        name: app_id
        required: true
        type: string
      - description: Connection id
        in: path
        name: connection_id
        required: true
        type: integer
      - description: Fact request id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/fact.Fact'
      security:
      - BearerAuth: []
      summary: Get fact details.
      tags:
      - facts
  /apps/:app_id/connections/{connection_id}/messages:
    get:
      consumes:
      - application/json
      description: List conversation messages with a specific connection.
      parameters:
      - description: return elements since a message id
        in: query
        name: messages_since
        type: integer
      - description: page number
        in: query
        name: page
        type: integer
      - description: number of elements per page
        in: query
        name: per_page
        type: integer
      - description: App id
        in: path
        name: app_id
        required: true
        type: string
      - description: Connection ID
        in: path
        name: connection_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/message.response'
      security:
      - BearerAuth: []
      summary: List conversation messages.
      tags:
      - messages
    post:
      consumes:
      - application/json
      description: Sends a message to the specified connection.
      parameters:
      - description: App id
        in: path
        name: app_id
        required: true
        type: string
      - description: Connection id
        in: path
        name: connection_id
        required: true
        type: integer
      - description: message request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/message.CreateMessageRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/message.Message'
      security:
      - BearerAuth: []
      summary: Sends a message.
      tags:
      - messages
  /apps/:app_id/connections/{connection_id}/messages/{id}:
    get:
      consumes:
      - application/json
      description: Get message details
      parameters:
      - description: App id
        in: path
        name: app_id
        required: true
        type: string
      - description: Connection id
        in: path
        name: connection_id
        required: true
        type: integer
      - description: Message id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/message.Message'
      security:
      - BearerAuth: []
      summary: Gets a message.
      tags:
      - messages
  /apps/:app_id/connections/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes an existing connection and sends a request for public information
        and avoids incoming comms from that connection.
      parameters:
      - description: App id
        in: path
        name: app_id
        required: true
        type: string
      - description: current connection id
        in: path
        name: id
        required: true
        type: integer
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/connection.CreateConnectionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/connection.Connection'
      security:
      - BearerAuth: []
      summary: Deletes an existing connection.
      tags:
      - connections
    get:
      consumes:
      - application/json
      description: Get connection details by selfID.
      parameters:
      - description: App id
        in: path
        name: app_id
        required: true
        type: string
      - description: current connection id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/connection.Connection'
      security:
      - BearerAuth: []
      summary: Get connection details.
      tags:
      - connections
    put:
      consumes:
      - application/json
      description: Updates the properties of an existing connection..
      parameters:
      - description: App id
        in: path
        name: app_id
        required: true
        type: string
      - description: current connection id
        in: path
        name: id
        required: true
        type: integer
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/connection.UpdateConnectionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/connection.Connection'
      security:
      - BearerAuth: []
      summary: Updates a connection.
      tags:
      - connections
  /apps/{app_id}/connections/{connection_id}/requests:
    post:
      consumes:
      - application/json
      description: Sends a request request to the specified self user.
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: number of elements per page
        in: query
        name: per_page
        type: integer
      - description: App id
        in: path
        name: app_id
        required: true
        type: string
      - description: Connection id
        in: path
        name: connection_id
        required: true
        type: string
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.CreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/connection.Connection'
      security:
      - BearerAuth: []
      summary: Sends a request request.
      tags:
      - requests
  /apps/{app_id}/connections/{connection_id}/requests/{id}:
    get:
      consumes:
      - application/json
      description: Get request details by request request id.
      parameters:
      - description: App id
        in: path
        name: app_id
        required: true
        type: string
      - description: Connection id
        in: path
        name: connection_id
        required: true
        type: integer
      - description: Request request id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/request.Request'
      security:
      - BearerAuth: []
      summary: Get request details.
      tags:
      - requests
  /healthcheck:
    get:
      consumes:
      - application/json
      description: check the service is up and running
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: ok
          schema:
            type: string
      summary: healthcheck endpoint
      tags:
      - healthcheck
  /login:
    post:
      consumes:
      - application/json
      description: Get a temporary JWT token to interact with the api.
      parameters:
      - description: Self ID
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.AuthRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.AuthResponse'
      summary: Authenticate.
      tags:
      - login
schemes:
- http
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
