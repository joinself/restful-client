basePath: /v1/
definitions:
  account.ChangePasswordRequest:
    properties:
      new_password:
        type: string
      password:
        type: string
    type: object
  account.CreateAccountRequest:
    properties:
      password:
        type: string
      resources:
        items:
          type: string
        type: array
      username:
        type: string
    type: object
  account.CreateAccountResponse:
    properties:
      requires_password_change:
        type: integer
      resources:
        type: string
      user_name:
        type: string
    type: object
  app.CreateAppRequest:
    properties:
      callback:
        type: string
      env:
        type: string
      id:
        type: string
      name:
        type: string
      secret:
        type: string
    type: object
  app.ExtApp:
    properties:
      env:
        type: string
      id:
        type: string
      name:
        type: string
      status:
        type: string
    type: object
  app.ExtListResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/app.ExtApp'
        type: array
      page:
        type: integer
      page_count:
        type: integer
      per_page:
        type: integer
      total_count:
        type: integer
    type: object
  auth.LoginRequest:
    properties:
      password:
        type: string
      refresh_token:
        type: string
      username:
        type: string
    type: object
  auth.LoginResponse:
    properties:
      refresh_token:
        type: string
      token:
        type: string
    type: object
  connection.CreateConnectionRequest:
    properties:
      selfid:
        type: string
    type: object
  connection.ExtConnection:
    properties:
      app_id:
        type: string
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      updated_at:
        type: string
    type: object
  connection.ExtListResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/connection.ExtConnection'
        type: array
      page:
        type: integer
      page_count:
        type: integer
      per_page:
        type: integer
      total_count:
        type: integer
    type: object
  connection.UpdateConnectionRequest:
    properties:
      name:
        type: string
    type: object
  fact.CreateFactRequestDoc:
    properties:
      facts:
        items:
          properties:
            group:
              properties:
                icon:
                  type: string
                name:
                  type: string
              type: object
            key:
              type: string
            source:
              type: string
            type:
              type: string
            value:
              type: string
          type: object
        type: array
    type: object
  fact.ExtFact:
    properties:
      created_at:
        type: string
      iss:
        type: string
      key:
        type: string
      source:
        type: string
      values:
        items:
          type: string
        type: array
    type: object
  fact.ExtListResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/fact.ExtFact'
        type: array
      page:
        type: integer
      page_count:
        type: integer
      per_page:
        type: integer
      total_count:
        type: integer
    type: object
  message.CreateMessageRequest:
    properties:
      body:
        type: string
    type: object
  message.Message:
    properties:
      body:
        type: string
      cid:
        type: string
      created_at:
        type: string
      iat:
        type: string
      iss:
        type: string
      jti:
        type: string
      rid:
        type: string
      updated_at:
        type: string
    type: object
  message.UpdateMessageRequest:
    properties:
      body:
        type: string
    type: object
  message.response:
    properties:
      items:
        items:
          $ref: '#/definitions/message.Message'
        type: array
      page:
        type: integer
      page_count:
        type: integer
      per_page:
        type: integer
      total_count:
        type: integer
    type: object
  notification.SystemNotificationData:
    properties:
      metadata:
        properties:
          payload:
            type: string
          type:
            type: string
        type: object
      notification:
        properties:
          message:
            type: string
          title:
            type: string
          type:
            type: string
        type: object
    type: object
  request.CreateRequest:
    properties:
      callback:
        type: string
      connection_self_id:
        type: string
      description:
        type: string
      facts:
        items:
          $ref: '#/definitions/request.FactRequest'
        type: array
      out_of_band:
        type: boolean
      type:
        type: string
    type: object
  request.FactRequest:
    properties:
      name:
        type: string
      sources:
        items:
          type: string
        type: array
    type: object
  request.Request:
    properties:
      auth:
        type: boolean
      created_at:
        type: string
      deep_link:
        type: string
      facts:
        items:
          $ref: '#/definitions/request.FactRequest'
        type: array
      id:
        type: string
      qr_code:
        type: string
      resources:
        items:
          $ref: '#/definitions/request.RequestResource'
        type: array
      status:
        type: string
      typ:
        type: string
      updated_at:
        type: string
    type: object
  request.RequestResource:
    properties:
      uri:
        type: string
    type: object
  response.Error:
    properties:
      details:
        type: string
      error:
        type: string
      path:
        type: string
      status:
        type: integer
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is the api for Joinself restful client.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Joinself restful-client API
  version: "1.0"
paths:
  /accounts:
    post:
      consumes:
      - application/json
      description: Creates a new account and sends a request for public information.
        You must be authenticated as an admin.
      parameters:
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/account.CreateAccountRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/account.CreateAccountResponse'
      security:
      - BearerAuth: []
      summary: Creates a new account.
      tags:
      - accounts
  /accounts/{username}:
    delete:
      consumes:
      - application/json
      description: Deletes an existing account and sends a request for public information
        and avoids incoming comms from that account. You must be authenticated as
        an admin.
      parameters:
      - description: Username of the account to delete
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "404":
          description: Not found - The requested resource does not exist, or you don't
            have permissions to access it
          schema:
            $ref: '#/definitions/response.Error'
      security:
      - BearerAuth: []
      summary: Deletes an existing account.
      tags:
      - accounts
  /accounts/{username}/password:
    put:
      consumes:
      - application/json
      description: Changes the password for the current user. You must be authenticated.
      parameters:
      - description: Username of the account to change the password
        in: path
        name: username
        required: true
        type: string
      - description: Password change details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/account.ChangePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: No Content
          schema:
            type: string
        "400":
          description: Bad request - The provided body is not valid
          schema:
            $ref: '#/definitions/response.Error'
        "404":
          description: Not found - The requested resource does not exist, or you don't
            have permissions to access it
          schema:
            $ref: '#/definitions/response.Error'
        "500":
          description: Internal error - There was a problem with your request
          schema:
            $ref: '#/definitions/response.Error'
      security:
      - BearerAuth: []
      summary: Changes the password for the current user.
      tags:
      - accounts
  /apps:
    get:
      consumes:
      - application/json
      description: Retrieves and lists all the configured apps for the restful client.
        You must be authenticated as an admin.
      produces:
      - application/json
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/app.ExtListResponse'
        "404":
          description: Not found - The requested resource does not exist, or you don't
            have permissions to access it
          schema:
            $ref: '#/definitions/response.Error'
      security:
      - BearerAuth: []
      summary: Lists all configured apps.
      tags:
      - apps
    post:
      consumes:
      - application/json
      description: Creates a new app with the given parameters. You must be authenticated
        as an admin.
      parameters:
      - description: Details of the new app to create
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/app.CreateAppRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully created app details
          schema:
            $ref: '#/definitions/app.ExtApp'
        "400":
          description: Bad request - The provided body is not valid
          schema:
            $ref: '#/definitions/response.Error'
        "404":
          description: Not found - The requested resource does not exist, or you don't
            have permissions to access it
          schema:
            $ref: '#/definitions/response.Error'
        "500":
          description: Internal error - There was a problem with your request
          schema:
            $ref: '#/definitions/response.Error'
      security:
      - BearerAuth: []
      summary: Creates a new app.
      tags:
      - app
  /apps/{app_id}/connections:
    get:
      consumes:
      - application/json
      description: List connections matching the specified filters.
      parameters:
      - description: App id
        in: path
        name: app_id
        required: true
        type: string
      - description: page number
        in: query
        name: page
        type: integer
      - description: number of elements per page
        in: query
        name: per_page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/connection.ExtListResponse'
      security:
      - BearerAuth: []
      summary: List connections.
      tags:
      - connections
    post:
      consumes:
      - application/json
      description: Creates a new connection and sends a request for public information.
      parameters:
      - description: App id
        in: path
        name: app_id
        required: true
        type: string
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/connection.CreateConnectionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/connection.ExtConnection'
      security:
      - BearerAuth: []
      summary: Creates a new connection.
      tags:
      - connections
  /apps/{app_id}/connections/{connection_id}/facts:
    get:
      consumes:
      - application/json
      description: This endpoint retrieves a list of facts using the provided app_id,
        connection_id, and other optional filters. The results can be paginated using
        page and per_page parameters.
      parameters:
      - description: Unique Identifier for the Application
        in: path
        name: app_id
        required: true
        type: string
      - description: Unique Identifier for the Connection
        in: path
        name: connection_id
        required: true
        type: string
      - description: Page number for the results pagination
        in: query
        name: page
        type: integer
      - description: Number of results per page
        in: query
        name: per_page
        type: integer
      - description: Filter by source of the fact
        in: query
        name: source
        type: string
      - description: Filter by fact
        in: query
        name: fact
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved the list of facts
          schema:
            $ref: '#/definitions/fact.ExtListResponse'
        "404":
          description: The requested resource could not be found or you don't have
            permission to access it
          schema:
            $ref: '#/definitions/response.Error'
        "500":
          description: There was a problem with your request. Please try again
          schema:
            $ref: '#/definitions/response.Error'
      security:
      - BearerAuth: []
      summary: Retrieve facts based on filters
      tags:
      - facts
    post:
      consumes:
      - application/json
      description: This endpoint issues a new fact to a specific connection using
        the provided app_id, connection_id and the request body.
      parameters:
      - description: Unique Identifier for the Application
        in: path
        name: app_id
        required: true
        type: string
      - description: Unique Identifier for the Connection
        in: path
        name: connection_id
        required: true
        type: string
      - description: Body containing the details of the fact to be issued
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/fact.CreateFactRequestDoc'
      produces:
      - application/json
      responses:
        "201":
          description: Fact successfully issued
          schema:
            type: string
        "400":
          description: Invalid input - the provided body is not valid
          schema:
            $ref: '#/definitions/response.Error'
        "404":
          description: Not found - the requested resource does not exist, or you don't
            have permissions to access it
          schema:
            $ref: '#/definitions/response.Error'
        "500":
          description: Internal error - there was a problem with your request. Please
            try again
          schema:
            $ref: '#/definitions/response.Error'
      security:
      - BearerAuth: []
      summary: Issue a new fact to a connection
      tags:
      - facts
  /apps/{app_id}/connections/{connection_id}/facts/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes an existing fact for a specific connection identified by
        app_id, connection_id and the id of the fact to be deleted.
      parameters:
      - description: Unique Identifier for the Application
        in: path
        name: app_id
        required: true
        type: string
      - description: Unique Identifier for the Connection
        in: path
        name: connection_id
        required: true
        type: string
      - description: Unique Identifier for the Fact to be deleted
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Fact successfully deleted
          schema:
            type: string
        "404":
          description: The requested resource does not exist, or you don't have permissions
            to access it
          schema:
            $ref: '#/definitions/response.Error'
      security:
      - BearerAuth: []
      summary: Deletes a fact
      tags:
      - facts
    get:
      consumes:
      - application/json
      description: This endpoint retrieves the details of a specific fact using the
        provided app_id, connection_id and fact request id.
      parameters:
      - description: Unique Identifier for the Application
        in: path
        name: app_id
        required: true
        type: string
      - description: Unique Identifier for the Connection
        in: path
        name: connection_id
        required: true
        type: string
      - description: Unique Identifier for the Fact Request
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved the fact details
          schema:
            $ref: '#/definitions/fact.ExtFact'
        "404":
          description: The requested fact could not be found or you don't have permission
            to access it
          schema:
            $ref: '#/definitions/response.Error'
      security:
      - BearerAuth: []
      summary: Retrieve specific fact details
      tags:
      - facts
  /apps/{app_id}/connections/{connection_id}/messages:
    get:
      consumes:
      - application/json
      description: List conversation messages with a specific connection.
      parameters:
      - description: return elements since a message id
        in: query
        name: messages_since
        type: integer
      - description: page number
        in: query
        name: page
        type: integer
      - description: number of elements per page
        in: query
        name: per_page
        type: integer
      - description: App id
        in: path
        name: app_id
        required: true
        type: string
      - description: Connection ID
        in: path
        name: connection_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/message.response'
      security:
      - BearerAuth: []
      summary: List conversation messages.
      tags:
      - messages
    post:
      consumes:
      - application/json
      description: Sends a message to the specified connection.
      parameters:
      - description: App id
        in: path
        name: app_id
        required: true
        type: string
      - description: Connection id
        in: path
        name: connection_id
        required: true
        type: string
      - description: message request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/message.CreateMessageRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/message.Message'
      security:
      - BearerAuth: []
      summary: Sends a message.
      tags:
      - messages
  /apps/{app_id}/connections/{connection_id}/messages/{jti}:
    get:
      consumes:
      - application/json
      description: Get message details
      parameters:
      - description: App id
        in: path
        name: app_id
        required: true
        type: string
      - description: Connection id
        in: path
        name: connection_id
        required: true
        type: string
      - description: Message JTI
        in: path
        name: jti
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/message.Message'
      security:
      - BearerAuth: []
      summary: Gets a message.
      tags:
      - messages
    put:
      consumes:
      - application/json
      description: Sends an edited message to the specified connection.
      parameters:
      - description: App id
        in: path
        name: app_id
        required: true
        type: string
      - description: Connection id
        in: path
        name: connection_id
        required: true
        type: string
      - description: Message jti
        in: path
        name: jti
        required: true
        type: string
      - description: message request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/message.UpdateMessageRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/message.Message'
      security:
      - BearerAuth: []
      summary: Edits a message.
      tags:
      - messages
  /apps/{app_id}/connections/{connection_id}/notify:
    post:
      consumes:
      - application/json
      description: Sends a system notification to the given connection
      parameters:
      - description: App id
        in: path
        name: app_id
        required: true
        type: string
      - description: Connection id
        in: path
        name: connection_id
        required: true
        type: string
      - description: system notification
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/notification.SystemNotificationData'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - BearerAuth: []
      summary: Sends a system notification.
      tags:
      - notifications
  /apps/{app_id}/connections/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes an existing connection and sends a request for public information
        and avoids incoming comms from that connection.
      parameters:
      - description: App id
        in: path
        name: app_id
        required: true
        type: string
      - description: current connection id
        in: path
        name: id
        required: true
        type: integer
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/connection.CreateConnectionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/connection.ExtConnection'
      security:
      - BearerAuth: []
      summary: Deletes an existing connection.
      tags:
      - connections
    get:
      consumes:
      - application/json
      description: Get connection details by selfID.
      parameters:
      - description: App id
        in: path
        name: app_id
        required: true
        type: string
      - description: current connection id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/connection.ExtConnection'
      security:
      - BearerAuth: []
      summary: Get connection details.
      tags:
      - connections
    put:
      consumes:
      - application/json
      description: Updates the properties of an existing connection..
      parameters:
      - description: App id
        in: path
        name: app_id
        required: true
        type: string
      - description: current connection id
        in: path
        name: id
        required: true
        type: integer
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/connection.UpdateConnectionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/connection.ExtConnection'
      security:
      - BearerAuth: []
      summary: Updates a connection.
      tags:
      - connections
  /apps/{app_id}/requests:
    post:
      consumes:
      - application/json
      description: Sends a request request to the specified self user.
      parameters:
      - description: App id
        in: path
        name: app_id
        required: true
        type: string
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.CreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/request.Request'
      security:
      - BearerAuth: []
      summary: Sends a request request.
      tags:
      - requests
  /apps/{app_id}/requests/{id}:
    get:
      consumes:
      - application/json
      description: Get request details by request request id.
      parameters:
      - description: App id
        in: path
        name: app_id
        required: true
        type: string
      - description: Request request id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/request.Request'
      security:
      - BearerAuth: []
      summary: Get request details.
      tags:
      - requests
  /apps/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes an existing app and sends a request for public information
        and avoids incoming comms from that app. You must be authenticated as an admin.
      parameters:
      - description: ID of the app to delete
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "404":
          description: Not found - The requested resource does not exist, or you don't
            have permissions to access it
          schema:
            $ref: '#/definitions/response.Error'
      security:
      - BearerAuth: []
      summary: Deletes an existing app.
      tags:
      - apps
  /healthcheck:
    get:
      consumes:
      - application/json
      description: check the service is up and running
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: ok
          schema:
            type: string
      summary: healthcheck endpoint
      tags:
      - healthcheck
  /login:
    post:
      consumes:
      - application/json
      description: Authenticates a user and returns a temporary JWT token and refresh
        token for API interaction.
      parameters:
      - description: Authentication request body with your username and password,
          or a refresh token
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully authenticated, JWT token and Refresh JWT token
            are returned in response
          schema:
            $ref: '#/definitions/auth.LoginResponse'
        "400":
          description: Returns error details
          schema:
            $ref: '#/definitions/response.Error'
        "401":
          description: Returns error details
          schema:
            $ref: '#/definitions/response.Error'
      summary: User Authentication
      tags:
      - Authentication
schemes:
- http
- https
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
